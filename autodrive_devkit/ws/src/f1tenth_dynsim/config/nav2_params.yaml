# =========================
# NAV2 PARAMS - HUMBLE (SLAM online)
# Frames: map (global), odom (local), base_footprint (base)
# =========================

bt_navigator:
  ros__parameters:
    use_sim_time: True
    # Usar o BT padrão do Humble (evita .so faltando)
    default_bt_xml_filename: "/opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml"
    enable_stamped_cmd_vel: False
    # NÃO listar plugin_lib_names: o Nav2 carrega os padrões automaticamente
    # (manter essas abaixo só se realmente precisar)
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# -------------------------
# CONTROLLER (local planner)
# -------------------------
controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.001

    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      stateful: True
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: False
      min_vel_x: 0.0
      max_vel_x: 0.8
      max_vel_theta: 2.5
      min_speed_xy: 0.0
      max_speed_xy: 0.8
      acc_lim_x: 2.5
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_theta: -3.2
      vx_samples: 20
      vtheta_samples: 20
      sim_time: 1.5
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      trans_stopped_velocity: 0.05
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 20.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 15.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 20.0
      GoalDist.scale: 15.0
      RotateToGoal.scale: 20.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

# -------------------------
# PLANNER (global planner)
# -------------------------
planner_server:
  ros__parameters:
    use_sim_time: True
    expected_planner_frequency: 10.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

# -------------------------
# SMOOTHER
# -------------------------
smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

# -------------------------
# BEHAVIORS
# -------------------------
behavior_server:
  ros__parameters:
    use_sim_time: True
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]

    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    wait:
      plugin: "nav2_behaviors/Wait"

    # Costmap/frames p/ behaviors
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.2
    simulate_ahead_time: 2.0
    max_rotational_vel: 2.5
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

# -------------------------
# COSTMAPS
# -------------------------
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: True
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_footprint
      rolling_window: True
      width: 5
      height: 5
      resolution: 0.05
      robot_radius: 0.22
      always_send_full_costmap: True
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          data_type: LaserScan
          marking: True
          clearing: True
          obstacle_max_range: 8.0
          obstacle_min_range: 0.05
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.5

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: True
      global_frame: map
      robot_base_frame: base_footprint
      track_unknown_space: True
      rolling_window: True
      width: 30
      height: 30
      resolution: 0.05
      always_send_full_costmap: True
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          data_type: LaserScan
          marking: True
          clearing: True
          obstacle_max_range: 8.0
          obstacle_min_range: 0.05
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.5

# -------------------------
# MAP SERVER / SAVER (opcional quando usar mapa estático)
# -------------------------
map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

# -------------------------
# WAYPOINTS / SMOOTHER DE VELOCIDADE
# -------------------------
waypoint_follower:
  ros__parameters:
    use_sim_time: True
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 2

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.8, 0.0, 2.5]
    min_velocity: [-0.8, 0.0, -2.5]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

robot_state_publisher:
  ros__parameters:
    use_sim_time: True
